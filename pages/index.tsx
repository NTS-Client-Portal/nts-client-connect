import Head from 'next/head'
import { useSession, useSupabaseClient } from '@supabase/auth-helpers-react'
import { Auth, ThemeSupa } from '@supabase/auth-ui-react'
import TodoList from '@/components/TodoList'
import { useEffect } from 'react'

export default function Home() {
  const session = useSession()
  const supabase = useSupabaseClient()

  useEffect(() => {
    const refreshSession = async () => {
      const { data, error } = await supabase.auth.refreshSession()
      if (error) console.log('Error refreshing session:', error.message)
    }

    if (session) {
      refreshSession()
    }
  }, [session, supabase])

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="w-full h-full bg-200">
        {!session ? (
          <div className="min-w-full min-h-screen flex items-center justify-center">
            <div className="w-full h-full flex justify-center items-center p-4">
              <div className="w-full h-full sm:h-auto sm:w-2/5 max-w-sm p-5 bg-white shadow flex flex-col text-base">
                <span className="font-sans text-4xl text-center pb-2 mb-1 border-b mx-4 align-center">
                  Login
                </span>
                <div className="mt-4">
                  <Auth
                    supabaseClient={supabase}
                    providers={['google']} // Add Google as a provider
                    appearance={{ theme: ThemeSupa }}
                    theme="dark"
                  />
                </div>
              </div>
            </div>
          </div>
        ) : (
            <div
              className="w-full h-full flex flex-col justify-center items-center p-4"
              style={{ minWidth: 250, maxWidth: 600, margin: 'auto' }}
            >
              <TodoList session={session} />
              <button
                className="btn-black w-full mt-12"
                onClick={async () => {
                  try {
                    const { error } = await supabase.auth.signOut();
                    if (error) {
                      console.error('Error logging out:', error.message);
                      alert('Failed to log out. Please try again.');
                      // Optionally, redirect to login page
                      window.location.href = '/login';
                    } else {
                      window.location.reload(); // Reload the page to clear session state
                    }
                  } catch (err) {
                    console.error('Unexpected error during logout:', err);
                    alert('An unexpected error occurred. Please try again.');
                    // Optionally, redirect to login page
                    window.location.href = '/login';
                  }
                }}
              >
                Logout
              </button>
            </div>
        )}
      </div>
    </>
  );
}